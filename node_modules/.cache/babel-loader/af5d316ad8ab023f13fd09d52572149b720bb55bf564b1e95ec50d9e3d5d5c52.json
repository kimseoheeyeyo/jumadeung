{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  name: 'QnA',\n  data() {\n    return {\n      newQuestion: \"\",\n      searchQuery: \"\",\n      questions: JSON.parse(localStorage.getItem(\"questions\")) || [{\n        text: \"당신의 가장 소중한 기억은 무엇인가요?\",\n        answer: \"\",\n        newAnswer: \"\"\n      }, {\n        text: \"오늘 하루를 돌아보며 가장 감사했던 순간은?\",\n        answer: \"\",\n        newAnswer: \"\"\n      }, {\n        text: \"지금 당신에게 가장 중요한 사람은 누구인가요?\",\n        answer: \"\",\n        newAnswer: \"\"\n      }, {\n        text: \"남기고 싶은 메시지가 있다면 무엇인가요?\",\n        answer: \"\",\n        newAnswer: \"\"\n      }, {\n        text: \"내일이 마지막 날이라면 무엇을 하고 싶나요?\",\n        answer: \"\",\n        newAnswer: \"\"\n      }],\n      currentPage: 1,\n      itemsPerPage: 5,\n      activeOptions: null,\n      activeAnswerOptions: null\n    };\n  },\n  computed: {\n    filteredQuestions() {\n      const query = this.searchQuery.toLowerCase();\n      const filtered = this.questions.filter(q => q.text.toLowerCase().includes(query) || q.answer && q.answer.toLowerCase().includes(query));\n      return filtered.slice((this.currentPage - 1) * this.itemsPerPage, this.currentPage * this.itemsPerPage);\n    },\n    totalPages() {\n      return Math.ceil(this.questions.length / this.itemsPerPage) || 1;\n    }\n  },\n  methods: {\n    addQuestion() {\n      if (this.newQuestion.trim()) {\n        const newQuestion = {\n          text: this.newQuestion.trim(),\n          answer: \"\",\n          newAnswer: \"\"\n        };\n        this.questions.unshift(newQuestion); // 기존 push() 대신 unshift() 사용\n        this.newQuestion = \"\";\n        this.saveToLocalStorage();\n      }\n    },\n    saveAnswer(index) {\n      const question = this.filteredQuestions[index];\n      if (question.newAnswer.trim()) {\n        question.answer = question.newAnswer.trim();\n        question.newAnswer = \"\";\n        this.saveToLocalStorage();\n      }\n    },\n    toggleOptions(index) {\n      this.activeOptions = this.activeOptions === index ? null : index;\n    },\n    toggleAnswerOptions(index) {\n      this.activeAnswerOptions = this.activeAnswerOptions === index ? null : index;\n    },\n    saveToLocalStorage() {\n      localStorage.setItem(\"questions\", JSON.stringify(this.questions));\n    },\n    changePage(page) {\n      this.currentPage = page;\n    },\n    // 질문 수정 메서드\n    editQuestion(index) {\n      const newQuestionText = prompt('수정할 질문을 입력하세요:', this.questions[index].text);\n      if (newQuestionText) {\n        this.questions[index].text = newQuestionText;\n        this.saveToLocalStorage();\n      }\n    },\n    // 질문 삭제 메서드\n    deleteQuestion(index) {\n      if (confirm('정말로 이 질문을 삭제하시겠습니까?')) {\n        this.questions.splice(index, 1);\n        this.saveToLocalStorage();\n      }\n    },\n    // 답변 수정 메서드 추가\n    editAnswer(index) {\n      const newAnswerText = prompt('수정할 답변을 입력하세요:', this.filteredQuestions[index].answer);\n      if (newAnswerText) {\n        this.filteredQuestions[index].answer = newAnswerText;\n        this.saveToLocalStorage();\n      }\n    },\n    // 답변 삭제 메서드 추가\n    deleteAnswer(index) {\n      if (confirm('정말로 이 답변을 삭제하시겠습니까?')) {\n        this.filteredQuestions[index].answer = '';\n        this.saveToLocalStorage();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","newQuestion","searchQuery","questions","JSON","parse","localStorage","getItem","text","answer","newAnswer","currentPage","itemsPerPage","activeOptions","activeAnswerOptions","computed","filteredQuestions","query","toLowerCase","filtered","filter","q","includes","slice","totalPages","Math","ceil","length","methods","addQuestion","trim","unshift","saveToLocalStorage","saveAnswer","index","question","toggleOptions","toggleAnswerOptions","setItem","stringify","changePage","page","editQuestion","newQuestionText","prompt","deleteQuestion","confirm","splice","editAnswer","newAnswerText","deleteAnswer"],"sources":["C:\\Users\\user\\Desktop\\새 폴더\\project1-main\\src\\view\\QnaPage.vue"],"sourcesContent":["<template>\n  <div id=\"qna\">\n    <!-- 상단 -->\n\n    <!-- 문답 페이지 내용 -->\n    <main class=\"main\">\n      <div class=\"questions-card\">\n        <h1>문답</h1>\n        <!-- 검색 기능 -->\n        <input\n          type=\"text\"\n          v-model=\"searchQuery\"\n          placeholder=\"질문 + 답변 검색...\"\n          class=\"search-input\"\n        />\n        <!--새 질문 추가-->\n        <div class=\"new-question\">\n        <form @submit.prevent=\"addQuestion\">\n        <label for=\"newQuestion\">새 질문:&nbsp;&nbsp;&nbsp; </label>\n        <input type=\"text\" id=\"newQuestion\" v-model=\"newQuestion\" placeholder=\"새 질문을 입력하세요\" />\n        <button type=\"submit\">추가</button>\n          </form>\n        </div>\n        <ul>\n          <li v-for=\"(question, index) in filteredQuestions\" :key=\"index\" class=\"question-item\">\n            <div class=\"question-header\">\n              <button class=\"ellipsis-btn\" @click=\"toggleOptions(index)\">&#x22EE;</button>\n              <span><strong>질문:</strong> {{ question.text }}</span>\n              <div v-if=\"activeOptions === index\" class=\"options-menu\">\n                <button @click=\"editQuestion(index)\">✎</button>\n                <button @click=\"deleteQuestion(index)\">❌</button>\n              </div>\n            </div>\n            <!-- 저장된 답변 표시 -->\n            <div v-if=\"question.answer\" class=\"answer-display\">\n              <button class=\"ellipsis-btn\" @click=\"toggleAnswerOptions(index)\">&#x22EE;</button>\n              <strong>답변:</strong> {{ question.answer }}\n              <div v-if=\"activeAnswerOptions === index\" class=\"options-menu\">\n                <button @click=\"editAnswer(index)\">✎</button>\n                <button @click=\"deleteAnswer(index)\">❌</button>\n              </div>\n            </div>\n            <!-- 질문에 답변을 추가할 부분 -->\n            <div v-if=\"!question.answer\" class=\"answer-section\">\n              <input\n                type=\"text\"\n                v-model=\"question.newAnswer\"\n                :placeholder=\"'답변 입력...'\"\n                @keyup.enter=\"saveAnswer(index)\"\n              />\n              <button class=\"small-btn\" @click=\"saveAnswer(index)\">저장</button>\n            </div>\n          </li>\n        </ul>\n\n        <!-- 페이지네이션 버튼 -->\n        <div class=\"pagination\">\n          <button v-if=\"currentPage > 1\" class=\"small-btn\" @click=\"changePage(currentPage - 1)\">이전</button>\n          <span>{{ currentPage }} / {{ totalPages }}</span>\n          <button v-if=\"currentPage < totalPages\" class=\"small-btn\" @click=\"changePage(currentPage + 1)\">다음</button>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'QnA',\n  data() {\n    return {\n      newQuestion: \"\",\n      searchQuery: \"\",\n      questions: JSON.parse(localStorage.getItem(\"questions\")) || [\n        { text: \"당신의 가장 소중한 기억은 무엇인가요?\", answer: \"\", newAnswer: \"\" },\n        { text: \"오늘 하루를 돌아보며 가장 감사했던 순간은?\", answer: \"\", newAnswer: \"\" },\n        { text: \"지금 당신에게 가장 중요한 사람은 누구인가요?\", answer: \"\", newAnswer: \"\" },\n        { text: \"남기고 싶은 메시지가 있다면 무엇인가요?\", answer: \"\", newAnswer: \"\" },\n        { text: \"내일이 마지막 날이라면 무엇을 하고 싶나요?\", answer: \"\", newAnswer: \"\" },\n      ],\n      currentPage: 1,\n      itemsPerPage: 5,\n      activeOptions: null,\n      activeAnswerOptions: null,\n    };\n  },\n  computed: {\n  filteredQuestions() {\n    const query = this.searchQuery.toLowerCase();\n    const filtered = this.questions.filter((q) =>\n      q.text.toLowerCase().includes(query) || (q.answer && q.answer.toLowerCase().includes(query))\n    );\n    return filtered.slice(\n      (this.currentPage - 1) * this.itemsPerPage,\n      this.currentPage * this.itemsPerPage\n    );\n  },\n  totalPages() {\n    return Math.ceil(this.questions.length / this.itemsPerPage) || 1;\n  },\n},\n\n  methods: {\n    addQuestion() {\n  if (this.newQuestion.trim()) {\n    const newQuestion = { text: this.newQuestion.trim(), answer: \"\", newAnswer: \"\" };\n    this.questions.unshift(newQuestion); // 기존 push() 대신 unshift() 사용\n    this.newQuestion = \"\";\n    this.saveToLocalStorage();\n    }\n  },\n  saveAnswer(index) {\n    const question = this.filteredQuestions[index];\n    if (question.newAnswer.trim()) {\n      question.answer = question.newAnswer.trim();\n      question.newAnswer = \"\";\n      this.saveToLocalStorage();\n    }\n  },\n  toggleOptions(index) {\n    this.activeOptions = this.activeOptions === index ? null : index;\n  },\n  toggleAnswerOptions(index) {\n    this.activeAnswerOptions = this.activeAnswerOptions === index ? null : index;\n  },\n  saveToLocalStorage() {\n    localStorage.setItem(\"questions\", JSON.stringify(this.questions));\n  },\n  changePage(page) {\n    this.currentPage = page;\n  },\n  \n  // 질문 수정 메서드\n  editQuestion(index) {\n    const newQuestionText = prompt('수정할 질문을 입력하세요:', this.questions[index].text);\n    if (newQuestionText) {\n      this.questions[index].text = newQuestionText;\n      this.saveToLocalStorage();\n    }\n  },\n  \n  // 질문 삭제 메서드\n  deleteQuestion(index) {\n    if (confirm('정말로 이 질문을 삭제하시겠습니까?')) {\n      this.questions.splice(index, 1);\n      this.saveToLocalStorage();\n    }\n  },\n\n  // 답변 수정 메서드 추가\n  editAnswer(index) {\n    const newAnswerText = prompt('수정할 답변을 입력하세요:', this.filteredQuestions[index].answer);\n    if (newAnswerText) {\n      this.filteredQuestions[index].answer = newAnswerText;\n      this.saveToLocalStorage();\n    }\n  },\n\n  // 답변 삭제 메서드 추가\n  deleteAnswer(index) {\n    if (confirm('정말로 이 답변을 삭제하시겠습니까?')) {\n      this.filteredQuestions[index].answer = '';\n      this.saveToLocalStorage();\n    }\n  },\n}\n\n};  \n</script>\n\n<style scoped>\n/* 전체 페이지 스타일 */\n#qna {\n  font-family: Arial, sans-serif;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: space-between;\n  background-color: #f9f9f9;\n}\n\n/* 네비게이션 바 */\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #ddd;\n}\n\n/* 본문 레이아웃 */\n.main {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-grow: 1;\n  padding: 20px;\n  flex-direction: column;\n  align-items: center;\n}\n\n/* 질문 카드 스타일 */\n.questions-card {\n  background: white;\n  padding: 20px;\n  border-radius: 12px; /* 더 부드러운 라운드 모서리 */\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); /* 더 깊고 자연스러운 그림자 */\n  max-width: 650px; /* 최대 너비를 약간 확대 */\n  width: 100%;\n  margin-bottom: 20px; /* 카드를 여러 개 배치할 때 마진을 주어 간격을 더 넓힘 */\n  box-sizing: border-box; /* 패딩과 경계선을 포함해 사이즈 계산 */\n}\n/* 검색 입력창 스타일 */\n.search-input {\n  width: 100%;\n  padding: 12px;\n  margin-bottom: 20px; /* 검색 입력창 하단에 충분한 여백 추가 */\n  border: 1px solid #ccc;\n  border-radius: 10px; /* 입력창에 더 부드러운 경계 */\n  font-size: 1rem;\n  box-sizing: border-box;\n}\n\n/* 질문 아이템 스타일 */\n.question-item {\n  padding: 15px;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start; /* 질문을 상단에 정렬 */\n  position: relative;\n  margin-bottom: 20px; /* 질문 항목 간의 간격을 넓힘 */\n}\n\n.ellipsis-btn {\n  background: none;\n  border: none;\n  font-size: 22px;\n  cursor: pointer;\n  color: #666; /* 기본 색상 */\n  padding: 5px;\n  border-radius: 50%;\n  transition: background 0.3s, transform 0.2s;\n}\n\n.ellipsis-btn:hover {\n  background: rgba(0, 0, 0, 0.1); /* 호버 시 약간의 배경 효과 */\n}\n\n.ellipsis-btn:active {\n  transform: scale(0.9); /* 클릭 시 약간 축소 */\n}\n\n.options-menu.active {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n\n.options-menu button:hover {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n/* 답변 입력 영역 */\n.answer-section {\n  display: flex;\n  margin-top: 20px; /* 답변 섹션 위쪽 여백을 늘려서 간격을 더 줌 */\n  align-items: center;\n}\n\n/* 답변 입력 필드 */\n.answer-input {\n  flex-grow: 1;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n/* 페이지 네비게이션 버튼 */\n.pagination {\n  display: flex;\n  justify-content: center;\n  margin-top: 30px; /* 페이지 버튼과 질문 카드 간의 여백을 넓힘 */\n}\n\n.pagination button {\n  padding: 10px 16px;\n  border: 1px solid #ccc;\n  background-color: white;\n  cursor: pointer;\n  margin: 0 8px; /* 버튼 간 간격을 넓힘 */\n  border-radius: 10px;\n  font-size: 1rem;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n}\n\n.pagination button:hover {\n  background-color: #f1f1f1;\n}\n\n.pagination button:active {\n  transform: translateY(1px); /* 눌렸을 때 버튼이 살짝 내려가는 효과 */\n}\n\n.new-question form {\n  display: flex;\n  width: 90%;\n  max-width: 700px;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-radius: 30px; /* 라운드 코너 */\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1); /* 그림자 효과 */\n}\n\n.new-question input {\n  flex-grow: 1;\n  padding: 12px;\n  border: 1px solid #444;\n  border-radius: 20px;\n  margin-right: 15px;\n  font-size: 1rem;\n}\n\n.new-question input:focus {\n  outline: none;\n  border-color: #28a745; /* 초록색 포커스 색상 */\n}\n\n.new-question button {\n  padding: 12px 18px;\n  background-color: #28a745; /* 초록색 버튼 */\n  color: white;\n  border: none;\n  border-radius: 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n}\n\n.new-question button:hover {\n  background-color: #218838; /* 버튼 호버 시 어두운 초록 */\n  transform: translateY(-2px); /* 버튼을 약간 위로 올리는 효과 */\n}\n\n.new-question button:active {\n  transform: translateY(1px); /* 클릭 시 버튼 살짝 눌리는 효과 */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}